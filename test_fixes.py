#!/usr/bin/env python3
"""
Test script to verify the fixes for copy button and price extraction
"""

import asyncio
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from backend.enhanced_scraper import EnhancedMarketplaceScraper

async def test_price_extraction():
    """Test the price extraction with the fixed scraper"""
    
    test_cases = [
        {
            'url': 'https://www.olx.in/en-in/item/mobile-phones-c1453-used-iphone-in-arumbakkam-chennai-iid-1821022551',
            'expected_issue': 'Should not extract ID (1821022551) as price'
        },
        {
            'price_text': '‚Çπ 50,000',
            'expected_price': 50000
        },
        {
            'price_text': '‚Çπ59000',
            'expected_price': 59000
        },
        {
            'price_text': 'Price: ‚Çπ 25,500',
            'expected_price': 25500
        },
        {
            'price_text': '9876543210',  # Phone number - should be rejected
            'expected_price': None
        }
    ]
    
    async with EnhancedMarketplaceScraper() as scraper:
        print("üß™ Testing Price Extraction Fixes")
        print("=" * 50)
        
        # Test individual price extraction
        for i, case in enumerate(test_cases[1:], 1):  # Skip URL test for now
            if 'price_text' in case:
                result = scraper._extract_price(case['price_text'])
                expected = case['expected_price']
                status = "‚úÖ PASS" if result == expected else "‚ùå FAIL"
                print(f"Test {i}: {status}")
                print(f"  Input: '{case['price_text']}'")
                print(f"  Expected: {expected}")
                print(f"  Got: {result}")
                print()
        
        print("üéØ Key Improvements Made:")
        print("1. ‚úÖ Fixed copy button to use event.currentTarget instead of event.target")
        print("2. ‚úÖ Removed duplicate _estimate_price_from_context method that extracted URL IDs")
        print("3. ‚úÖ Enhanced price selectors to avoid phone numbers and IDs")
        print("4. ‚úÖ Added price validation to reject unrealistic values")
        print("5. ‚úÖ Added clipboard icon (üìã) to copy button")

if __name__ == "__main__":
    asyncio.run(test_price_extraction())